#!/bin/bash

# ANSI escape sequences for colored output
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
RESET="\033[0m"

logfile="/var/log/plot_move.log" # Set to a valid file path to enable logging
rsync_options="--preallocate --remove-source-files --skip-compress plot --progress"

timestamp() {
    echo -n "$(date '+%Y-%m-%d %H:%M:%S') "
}

if [ "$#" -ne 2 ]; then
    echo -e "$(timestamp)${RED}Error: Invalid number of arguments.${RESET}"
    echo -e "$(timestamp)${RED}Usage: $0 <watch_dir> <dest_dir>${RESET}"
    exit 1
fi

watch_dir="$1" # source directory
dest_dir="$2"  # destination directory

echo -e "$(timestamp)${CYAN}Monitoring directory: ${YELLOW}$watch_dir${RESET}"
echo -e "$(timestamp)${CYAN}Files will be transferred to: ${YELLOW}$dest_dir${RESET}"

_move_plot(){
    local plot
    plot="$1"
    echo -e "$(timestamp)${GREEN}New plot detected: ${MAGENTA}$plot${RESET}"
    echo -e "$(timestamp)${GREEN}Initiating transfer to: ${YELLOW}$dest_dir${RESET}"

    if [ -n "$logfile" ]; then
        rsync $rsync_options --log-file="$logfile" "$plot" "$dest_dir"/
    else
        rsync $rsync_options "$plot" "$dest_dir"/
    fi

    echo -e "$(timestamp)${GREEN}Transfer completed.${RESET}"
}

cleanup() {
    echo -e "$(timestamp)${RED}Terminating script due to SIGINT...${RESET}"
    kill -- -$$
}

trap cleanup SIGINT

loop(){
    local filename
    while true; do
        filename=$(ls -tr $watch_dir/*.plot 2> /dev/null | head -1)
        if [[ $filename != *.plot ]]; then
            sleep 5
            continue
        fi
        _move_plot $filename
    done
}
loop
