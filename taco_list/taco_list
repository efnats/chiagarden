#!/bin/bash

subdir=""
default_command="echo -e"

GREEN="\033[32m"
YELLOW="\033[33m"
CYAN="\033[36m"
RED="\033[31m"
BOLD="\033[1m"
RESET="\033[0m"

print_usage() {
    echo "Usage:"
    echo "./taco_list --mount-dir /path/to/dir [--subdir subdir_name] [--format oneline|newline|csv]"
    echo "or"
    echo "./taco_list --label CHIA [--subdir subdir_name] [--format oneline|newline|csv]"
}

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --mount-dir)
            mount_dir="$2"
            shift 2
            ;;
        --label)
            label="$2"
            shift 2
            ;;
        --subdir)
            subdir="$2"
            shift 2
            ;;
        --format)
            format="$2"
            shift 2
            ;;
        *)
            echo "Unknown argument: $1"
            print_usage
            exit 1
            ;;
    esac
done

if [ -z "$mount_dir" ] && [ -z "$label" ]; then
    echo -e "${RED}Please provide either --mount-dir or --label.${RESET}"
    print_usage
    exit 1
fi

if [ -n "$mount_dir" ] && [ -n "$label" ]; then
    echo -e "${RED}Error: Both --mount-dir and --label cannot be used at the same time.${RESET}"
    print_usage
    exit 1
fi

# Default format to 'newline' if not specified
[ -z "$format" ] && format="newline"

if [ -n "$mount_dir" ]; then
    dest_disks=$(find "$mount_dir" -mindepth 1 -maxdepth 1 -type d | sed "s|$|/$subdir|")
elif [ -n "$label" ]; then
    dest_disks=$(df -h | grep -E "^/dev/.*$label" | awk -v s="$subdir" '{print $6"/"s}')
    if [ -z "$dest_disks" ]; then
        echo -e "${RED}Error: No disks found with label $label.${RESET}"
        exit 1
    fi
fi

case $format in
    "oneline")
        dest_disks=$($default_command "$dest_disks" | tr '\n' ' ')
        ;;
    "csv")
        dest_disks=$($default_command "$dest_disks" | tr '\n' ',' | sed 's/,$//')
        ;;
    *)
        # Treat any unrecognized format as newline
        ;;
esac

$default_command "$dest_disks"
